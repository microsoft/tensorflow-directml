# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.

# The following variables are set in the pipeline web UI:
# - (required) AgentPool : name of the ADO agent pool that runs the jobs in this pipeline.
# - (required) TestPipelineName : name of the ADO pipeline to test this build.
# - (required) TestGroups : comma-separated list of test groups to test. e.g. 'python,core'
# - (required) TestArtifacts : comma-separated list of build artifacts to test. e.g. 'x64-win-release-cp36'
# - (optional) EmailTo : email address to receive generated HTML report. If empty, no email is sent.

name: $(Date:yyMMdd-HHmm)$(Rev:.r).$(SourceBranchName)

resources:
- repo: self

# No CI trigger; run on a schedule only.
trigger: none

# Build nightly at 8 AM UTC (1 AM PDT)
schedules:
- cron: "0 8 * * *"
  displayName: Nightly Run
  branches:
    include:
    - master
  always: false

jobs:
- job: build
  pool: $(AgentPool)
  timeoutInMinutes: 120
  strategy:
    matrix:
      x64_win_release_cp36:   { Architecture: "x64-win",   Configuration: release, PyVersion: "cp36" }
      x64_win_debug_cp36:     { Architecture: "x64-win",   Configuration: debug,   PyVersion: "cp36" }
      x64_linux_release_cp36: { Architecture: "x64-linux", Configuration: release, PyVersion: "cp36" }
      # x64_linux_debug_cp36:   { Architecture: "x64-linux", Configuration: debug, PyVersion: "cp36" }
  steps:
  - template: templates/clone.yml
  - template: templates/build.yml
    parameters: { IncludeTests: true }
  - template: templates/publish_artifacts.yml
  - template: templates/set_status.yml

- job: report
  pool: $(AgentPool)
  condition: succeededOrFailed()
  dependsOn: build 
  variables:
    status_x64_win_release_cp36: $[dependencies.build.outputs['x64_win_release_cp36.info_step.status']]
    status_x64_win_debug_cp36: $[dependencies.build.outputs['x64_win_debug_cp36.info_step.status']]
    status_x64_linux_release_cp36: $[dependencies.build.outputs['x64_linux_release_cp36.info_step.status']]
    # status_x64_linux_debug_cp36: $[dependencies.build.outputs['x64_linux_debug_cp36.info_step.status']]
    agent_x64_win_release_cp36: $[dependencies.build.outputs['x64_win_release_cp36.info_step.agent']]
    agent_x64_win_debug_cp36: $[dependencies.build.outputs['x64_win_debug_cp36.info_step.agent']]
    agent_x64_linux_release_cp36: $[dependencies.build.outputs['x64_linux_release_cp36.info_step.agent']]
    # agent_x64_linux_debug_cp36: $[dependencies.build.outputs['x64_linux_debug_cp36.info_step.agent']]
  steps:
  - template: templates/send_email.yml

- job: queue_test_pipeline
  pool: $(AgentPool)
  condition: and(succeeded(), or(eq(variables['RunTests'], 'true'), ne(variables['Build.Reason'], 'manual')))
  dependsOn: build
  steps:
  - task: PowerShell@2
    displayName: Queue Test Pipeline
    env:
      SYSTEM_ACCESSTOKEN: $(System.AccessToken)
    inputs:
      targetType: inline
      script: |
        . "third_party/dml/ci/build/ADOHelper.ps1"
        $Ado = [ADOHelper]::CreateFromPipeline('$(System.AccessToken)')
        $TestPipeline = $Ado.GetBuildDefinition('$(TestPipelineName)')
        $Ado.QueuePipeline(
            $TestPipeline.id,
            $null,
            @{'BuildId' = $env:Build_BuildId; 'EmailTo' = '$(EmailTo)'; 'TestGroups' = '$(TestGroups)'; 'Artifacts' = '$(TestArtifacts)'; 'WslArtifacts' = '$(WslTestArtifacts)'},
            $env:Build_SourceBranch,
            $env:Build_SourceVersion)