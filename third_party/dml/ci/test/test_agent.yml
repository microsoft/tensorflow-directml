# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.

# This pipeline tests artifacts from a specific build on a single agent.

# Variables that MUST be set when running the pipeline:
# - (required) AgentPool : name of the ADO agent pool that contains the agent to test.
# - (required) AgentName : name of the agent on which tests will run
# - (required) Artifacts : comma-separated list of build artifacts to test. e.g. 'x64-win-release-cp36'
# - (required) Pipeline : name of the build pipeline that produced artifacts to test 
# - (required) PipelineBuildID : ID of the build pipeline that produced artifacts to test
# - (required) TestGroups : comma-separated list of test groups to test. e.g. 'python,core'
# - (required) TimeoutMinutes : number of minutes allowed to test before the job is canceled
# - (required) RunOnWsl : whether this agent should run the WSL tests or not

name: 'test.$(AgentName)-$(PipelineBuildID)$(Rev:.r)'

# This pipeline is only triggered through REST API or by manually queuing it on an agent.
trigger: none

variables:
  TimeoutInMinutes: $[coalesce(variables['TimeoutMinutes'], '60')]
  skipComponentGovernanceDetection: true

jobs:
- job: test
  timeoutInMinutes: $[variables['TimeoutInMinutes']]
  cancelTimeoutInMinutes: 1
  pool:
    name: $(AgentPool)
    demands:
      - agent.name -equals $(AgentName)
  steps:
  - checkout: none

  - task: PowerShell@2
    displayName: Gather Agent Info
    inputs:
      targetType: inline
      script: |
        $OutputDir = "$(System.ArtifactsDirectory)/agent_info"
        New-Item -ItemType Directory -Path $OutputDir | Out-Null
        Start-Process dxdiag -ArgumentList "/x $OutputDir/dxdiag.xml" -Wait
        $EnvironmentVariables = @{}
        Get-ChildItem "env:" | ForEach-Object { $EnvironmentVariables[$_.Name] = $_.Value }
        $EnvironmentVariables | ConvertTo-Json | Out-File "$OutputDir\environment_vars.json" -Encoding utf8

  - task: PublishBuildArtifacts@1
    displayName: Upload Agent Info
    inputs:
      pathToPublish: $(System.ArtifactsDirectory)/agent_info
      artifactName: $(AgentName)

  - template: templates/test_artifact_steps.yml
    parameters:
      Artifact: $(Artifacts)
      TestGroups: $(TestGroups)
      Pipeline: $(Pipeline)
      PipelineBuildID: $(PipelineBuildID)
      RunOnWsl: $(RunOnWsl)